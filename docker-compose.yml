version: '3.3'

services:
  # Mongo for Payload Department Service
  mongo:
    image: mongo:6.0
    container_name: payload-metrics
    networks:
      - marsy-net

  mongo-logs:
    image: mongo:6.0
    container_name: logs-storage
    restart: always
    networks:
      - marsy-net

  # PostGresDB for Telemetry Service
  postgres:
    image: postgres:latest
    container_name: telemetry-database
    environment:
      - POSTGRES_PASSWORD=postgrespass
      - POSTGRES_USER=postgresuser
      - POSTGRES_DB=telemetry-db
    ports:
      - "5432:5432"
    volumes:
      - backend:/home/telemetry/data/bd
    networks:
      - marsy-net

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - marsy-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - marsy-net

  # Weather Monitoring Service
  weather-service:
    container_name: weather-service
    build:
      context: ./weather-service
    ports:
      - "8081:8080"
    networks:
      - marsy-net

  rocket-service:
    container_name: rocket-service
    build:
      context: ./rocket-service
    ports:
      - "8082:8080"
    networks:
      - marsy-net

  command-service:
    container_name: command-service
    build:
      context: ./command-service
    ports:
      - "8083:8080"
    networks:
      - marsy-net

  launchpad-service:
    container_name: launchpad-service
    build:
      context: ./launchpad-service
    ports:
      - "8090:8080"
    networks:
      - marsy-net

  payload-service:
    container_name: payload-service
    build:
      context: ./payload-service
    ports:
      - "8085:8080"
    networks:
      - marsy-net
    depends_on:
      - mongo

  telemetry-service:
    container_name: telemetry-service
    build:
      context: ./telemetry-service
    ports:
      - "8086:8080"
    networks:
      - marsy-net
    depends_on:
      - postgres

  staging-service:
    container_name: staging-service
    build:
      context: ./staging-service
    ports:
      - "8087:8080"
    networks:
      - marsy-net

  satellite-service:
    container_name: satellite-service
    build:
      context: ./satellite-service
    ports:
      - "8088:8080"
    networks:
      - marsy-net

  booster-service:
    container_name: booster-service
    build:
      context: ./booster-service
    ports:
      - "8089:8080"
    networks:
      - marsy-net

  webcaster-service:
    container_name: webcaster-service
    build:
      context: ./webcaster-service
    ports:
      - "8091:8080"
    networks:
      - marsy-net

networks:
  marsy-net:
    driver: bridge

volumes:
  backend:

